description = 'FeuerMoni Backend Services'

ext {
    javaVersion = JavaVersion.VERSION_1_8
}

assert JavaVersion.current().java8Compatible:
        "At least Java ${javaVersion} is required, current JVM is ${JavaVersion.current()}"

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.3.2.RELEASE"
    }
}

apply plugin: 'idea'
apply plugin: 'findbugs'
apply plugin: 'spring-boot'

targetCompatibility = javaVersion
sourceCompatibility = targetCompatibility

idea {
    project {
        languageLevel = javaVersion
    }
}

repositories {
    jcenter()
}

defaultTasks = ['clean', 'build']

archivesBaseName = "$group.$name"

tasks.withType(AbstractCompile) {
    options.compilerArgs << '-parameters'
    options.deprecation = true
    options.debug = true
    options.debugOptions.debugLevel = 'source,lines,vars'
    options.encoding = java.nio.charset.StandardCharsets.UTF_8.name()
}

findbugs {
    effort = 'max'
    reportLevel = 'low'
    sourceSets = [sourceSets.main]
}

tasks.withType(FindBugs) {
    if (name.endsWith('Test')) {
        tasks.remove(it)
    }

    reports {
        html.enabled = project.hasProperty('findbugsHtml')
        xml.enabled = !html.enabled
    }
}

bootRun {
    args = ["--spring.config.location=$rootDir/application-local.properties"]
    if (project.hasProperty('bootArgs')) {
        args += bootArgs.tokenize()
    }
    if (project.hasProperty('bootJvmArgs')) {
        jvmArgs = bootJvmArgs.tokenize()
    }
}

dependencies {
    compile 'org.projectlombok:lombok:1.16.6'
    compile 'org.springframework.boot:spring-boot-starter'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-validation'
    compile 'org.springframework.boot:spring-boot-starter-jersey'

    runtime 'org.springframework.boot:spring-boot-starter-undertow'
    runtime 'org.springframework.boot:spring-boot-devtools'
    runtime 'org.postgresql:postgresql'
    runtime 'org.flywaydb:flyway-core'
}

configurations {
    // use undertow
    all*.exclude module: 'spring-boot-starter-tomcat'
    // we don't need no XML marshalling
    all*.exclude module: 'jersey-media-jaxb'
}

task wrapper(type: Wrapper) {
    description = 'Defines the common gradle distribution for this project.'
    gradleVersion = '2.10'
}
